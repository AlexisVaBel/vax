<!doctype html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <script src="vendor/underscore.js" type="text/javascript"></script>
    <script src="vendor/jquery.js" type="text/javascript"></script>
    <script src="vendor/raphael.js" type="text/javascript"></script>
    <script src="vendor/raphael-pan-zoom/raphael.pan-zoom.js" type="text/javascript"></script>
    <script src="vendor/chosen/chosen.jquery.js" type="text/javascript"></script>
    <script src="vax.js" type="text/javascript"></script>
    <script src="schema.js" type="text/javascript"></script>

    <link rel="stylesheet" href="vendor/chosen/chosen.min.css" type="text/css"/>
    <link rel="stylesheet" href="vendor/raphael-pan-zoom/raphael.pan-zoom.css" type="text/css"/>
    <link rel="stylesheet" href="styles.css" type="text/css"/>
</head>
<body>
<style type="text/css">
    body {
        background: #111;
    }
    #eval {
        position: absolute;
        top: 120px;
        left: 30px;
        z-index: 1000;
    }
</style>
<div id="vax-test" style="width: 1024px; height: 768px;"></div>

<div class="vax-help">
    <ul>
        <li>Press X to add a new node</li>
        <li>Double click a node caption or a wire to remove it</li>
    </ul>
</div>


<script type="text/javascript">
    $(function()
    {
        window.myVAX = new VAX('vax-test', {schema: vaxSchema});

        window.bp = {
            version: "0.1",
            nodes: [
                {id: "1", c: "Add", x: 200, y: 200},
                {id: "2", c: "Add", x: 400, y: 400},
                {id: "3", c: "Constant", t: {T:"Numeric"}, a: {V:12}}
            ],
            wires: [
                ["1", "O", "2", "A"],
                ["1", "O", "2", "B"]
            ]
        };


        // eval
        $('#eval').click(function()
        {
            var trees = myVAX.composeTrees();

            if (trees.length !== 1)
            {
                return alert("There should be exactly one tree!");
            }

            var root = trees[0];

            if (root.component !== "Result")
            {
                return alert("Root node should be 'Result'!");
            }

            var walk = function walk(node)
            {
                if (!node)
                {
                    return 0;
                }

                switch (node.component)
                {
                    case 'Result':
                        return 'Result = ' + walk(node.links.I);

                    case 'Add':
                        return walk(node.links.A) + walk(node.links.B);

                    case 'Sub':
                        return walk(node.links.A) - walk(node.links.B);

                    case 'Mul':
                        return walk(node.links.A) * walk(node.links.B);

                    case 'Div':
                        return walk(node.links.A) / walk(node.links.B);

                    case 'Constant':
                        return parseInt(node.attrs.V);

                    default:
                        throw new Error("Unsupported node component: " + node.component);
                }
            };

            var res = walk(root);

            alert(res);
        });

        $('.vax-type-picker-select').chosen({});

        $(document).on('change', '.vax-type-picker-select', function()
        {
            var $this = $(this);
            var val = $this.val();

            var $option = $('option[value="' + val + '"]', $this);
            var n = parseInt($this.attr('data-type-n'));
            var $span = $('span[data-type-n="' + n +'"]');

            if ($option.attr('data-type-params-length'))
            {
                var l = parseInt($option.attr('data-type-params-length'));

                $span.append($('<span class="vax-type-picker-punct"> [ </span>'));

                for (var i = 0; i < l; ++i)
                {
                    var $clone = $this.clone();

                    $clone.attr('data-type-n', n + i + 1);
                    $clone.val('Any');
                    $clone.show();

                    $span.append($clone);
                    $span.append($('<span data-type-n="' + (n + i + 1) + '"></span>'));

                    if (i < l - 1)
                    {
                        $span.append($('<span class="vax-type-picker-punct"> , </span>'));
                    }


                    $clone.chosen({});
                }

                $span.append($('<span class="vax-type-picker-punct"> ] </span>'));

            }
            else
            {
                // plain shit
                $span.empty();
            }

            var res = '';
            // seriazlie type
            $('select,.vax-type-picker-punct', $('.vax-type-picker')).each(function()
            {
                var $el = $(this);

                if ($el.hasClass('vax-type-picker-punct'))
                {
                    res = res + $el.text();
                }
                else
                {
                    res = res + $el.val();
                }

                res = res.replace(' ', '');
                $('.vax-type-picker-signature').text(res);
            });
        });
    });
</script>
<button id="eval" type="button">Eval!</button>

<div class="vax-type-picker">
    <div class="vax-type-picker-title"><span class="vax-type-picker-signature">Any</span></div>
    <hr/>
    <div class="vax-type-picker-type-line">
        <select class="vax-type-picker-select" data-type-n="1">
            <option value="Any" selected="selected">Any</option>
            <option value="Numeric">Numeric</option>
            <option value="Int">Int</option>
            <option value="Bool">Bool</option>
            <option value="String">String</option>
            <option value="Float">Float</option>
            <option value="Array" data-type-params-length="1">Array [T]</option>
            <option value="Pair" data-type-params-length="2">Pair [A,B]</option>
        </select>
        <span data-type-n="1"><!-- sub type --></span>
    </div>
    <hr/>
    <div class="vax-type-picker-buttons">
        <button type="button">Ok</button><button type="button">Cancel</button>
    </div>
</div>

</body>
</html>